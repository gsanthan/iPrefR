
module main(){

VAR
  a : boolean;
  b : boolean;
  c : boolean;
  d : boolean;
  cha : boolean;
  chb : boolean;
  chc : boolean;
  chd : boolean;
  gch : boolean;

ASSIGN
  init(cha) := 0;
  init(chb) := 0;
  init(chc) := 0;
  init(chd) := 0;
  next(a) :=
    case{
      a=0 & cha=1 & ((b=1 & chb=1) | (b=0 & chb=0)) & ((c=1 & chc=1) | (c=0 & chc=0)) & ((d=1 & chd=1) | (d=0 & chd=0)): 1;
      d=0 & c=1 & chc=1 & a=0 & cha=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      d=0 & a=1 & cha=1 & b=1 & chb=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 0;
      c=0 & a=1 & cha=1 & d=1 & chd=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=0 & chd=1: 0;
      c=0 & b=1 & chb=1 & a=0 & cha=1 & d=0 & chd=1 & cha=1 & chb=1 & chc=0 & chd=1: 1;
      d=1 & b=1 & chb=1 & a=0 & cha=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      TRUE: a;
    };
  next(b) :=
    case{
      b=0 & chb=1 & ((a=1 & cha=1) | (a=0 & cha=0)) & ((c=1 & chc=1) | (c=0 & chc=0)) & ((d=1 & chd=1) | (d=0 & chd=0)): 1;
      d=1 & c=1 & chc=1 & b=0 & chb=1 & cha=0 & chb=1 & chc=1 & chd=0: 1;
      d=0 & c=1 & chc=1 & a=0 & cha=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      a=0 & d=0 & b=1 & chb=1 & c=0 & chc=1 & cha=0 & chb=1 & chc=1 & chd=0: 0;
      d=0 & a=1 & cha=1 & b=1 & chb=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 0;
      c=0 & a=1 & cha=1 & d=1 & chd=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=0 & chd=1: 1;
      c=0 & b=1 & chb=1 & a=0 & cha=1 & d=0 & chd=1 & cha=1 & chb=1 & chc=0 & chd=1: 0;
      d=1 & b=1 & chb=1 & a=0 & cha=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 0;
      TRUE: b;
    };
  next(c) :=
    case{
      c=0 & chc=1 & ((a=1 & cha=1) | (a=0 & cha=0)) & ((b=1 & chb=1) | (b=0 & chb=0)) & ((d=1 & chd=1) | (d=0 & chd=0)): 1;
      d=1 & c=1 & chc=1 & b=0 & chb=1 & cha=0 & chb=1 & chc=1 & chd=0: 0;
      b=1 & a=0 & d=1 & chd=1 & c=0 & chc=1 & cha=0 & chb=0 & chc=1 & chd=1: 1;
      d=0 & c=1 & chc=1 & a=0 & cha=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=1 & chd=0: 0;
      a=0 & d=0 & b=1 & chb=1 & c=0 & chc=1 & cha=0 & chb=1 & chc=1 & chd=0: 1;
      d=0 & a=1 & cha=1 & b=1 & chb=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      d=1 & b=1 & chb=1 & a=0 & cha=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      TRUE: c;
    };
  next(d) :=
    case{
      d=0 & chd=1 & ((a=1 & cha=1) | (a=0 & cha=0)) & ((b=1 & chb=1) | (b=0 & chb=0)) & ((c=1 & chc=1) | (c=0 & chc=0)): 1;
      b=1 & a=0 & d=1 & chd=1 & c=0 & chc=1 & cha=0 & chb=0 & chc=1 & chd=1: 0;
      c=0 & a=1 & cha=1 & d=1 & chd=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=0 & chd=1: 0;
      c=0 & b=1 & chb=1 & a=0 & cha=1 & d=0 & chd=1 & cha=1 & chb=1 & chc=0 & chd=1: 1;
      TRUE: d;
    };
  init(gch) := 0;
  next(gch) :=
    case{
      --gch=1: 0;
      a=0 & cha=1 & ((b=1 & chb=1) | (b=0 & chb=0)) & ((c=1 & chc=1) | (c=0 & chc=0)) & ((d=1 & chd=1) | (d=0 & chd=0)): 1;
      d=0 & c=1 & chc=1 & a=0 & cha=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      d=0 & a=1 & cha=1 & b=1 & chb=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      c=0 & a=1 & cha=1 & d=1 & chd=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=0 & chd=1: 1;
      c=0 & b=1 & chb=1 & a=0 & cha=1 & d=0 & chd=1 & cha=1 & chb=1 & chc=0 & chd=1: 1;
      d=1 & b=1 & chb=1 & a=0 & cha=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      b=0 & chb=1 & ((a=1 & cha=1) | (a=0 & cha=0)) & ((c=1 & chc=1) | (c=0 & chc=0)) & ((d=1 & chd=1) | (d=0 & chd=0)): 1;
      d=1 & c=1 & chc=1 & b=0 & chb=1 & cha=0 & chb=1 & chc=1 & chd=0: 1;
      d=0 & c=1 & chc=1 & a=0 & cha=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      a=0 & d=0 & b=1 & chb=1 & c=0 & chc=1 & cha=0 & chb=1 & chc=1 & chd=0: 1;
      d=0 & a=1 & cha=1 & b=1 & chb=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      c=0 & a=1 & cha=1 & d=1 & chd=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=0 & chd=1: 1;
      c=0 & b=1 & chb=1 & a=0 & cha=1 & d=0 & chd=1 & cha=1 & chb=1 & chc=0 & chd=1: 1;
      d=1 & b=1 & chb=1 & a=0 & cha=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      c=0 & chc=1 & ((a=1 & cha=1) | (a=0 & cha=0)) & ((b=1 & chb=1) | (b=0 & chb=0)) & ((d=1 & chd=1) | (d=0 & chd=0)): 1;
      d=1 & c=1 & chc=1 & b=0 & chb=1 & cha=0 & chb=1 & chc=1 & chd=0: 1;
      b=1 & a=0 & d=1 & chd=1 & c=0 & chc=1 & cha=0 & chb=0 & chc=1 & chd=1: 1;
      d=0 & c=1 & chc=1 & a=0 & cha=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      a=0 & d=0 & b=1 & chb=1 & c=0 & chc=1 & cha=0 & chb=1 & chc=1 & chd=0: 1;
      d=0 & a=1 & cha=1 & b=1 & chb=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      d=1 & b=1 & chb=1 & a=0 & cha=1 & c=0 & chc=1 & cha=1 & chb=1 & chc=1 & chd=0: 1;
      d=0 & chd=1 & ((a=1 & cha=1) | (a=0 & cha=0)) & ((b=1 & chb=1) | (b=0 & chb=0)) & ((c=1 & chc=1) | (c=0 & chc=0)): 1;
      b=1 & a=0 & d=1 & chd=1 & c=0 & chc=1 & cha=0 & chb=0 & chc=1 & chd=1: 1;
      c=0 & a=1 & cha=1 & d=1 & chd=1 & b=0 & chb=1 & cha=1 & chb=1 & chc=0 & chd=1: 1;
      c=0 & b=1 & chb=1 & a=0 & cha=1 & d=0 & chd=1 & cha=1 & chb=1 & chc=0 & chd=1: 1;
      TRUE: 0;
    };

INVAR !(a=0 & b=0 & c=0 & d=0);
INVAR !(a=0 & b=0 & c=0 & d=1);
INVAR !(a=1 & b=0 & c=0 & d=0);
INVAR !(a=1 & b=1 & c=0 & d=0);
INVAR !(a=0 & b=0 & c=1 & d=0);
INVAR !(a=0 & b=1 & c=0 & d=0);
INVAR !(a=1 & b=0 & c=0 & d=1);
INVAR !(a=1 & b=0 & c=1 & d=0);
INVAR !(a=0 & b=1 & c=1 & d=0);
DEFINE psi_i_TypeII:=(a=0 & b=1 & c=0 & d=1);
findCycle: SPEC ( (!EF (psi_i_TypeII)) | psi_i_TypeII ); 

}